var all_function_webkit = "StyleMedia.idl \nboolean matchMedium( DOMString mediaquery) \nHTMLModElement.idl \nattribute DOMString cite \nattribute DOMString dateTime \nHTMLDocument.idl \nattribute HTMLAllCollection all \nattribute DOMString dir \nattribute DOMString designMode \nattribute DOMString bgColor \nattribute DOMString fgColor \nattribute DOMString alinkColor \nattribute DOMString linkColor \nattribute DOMString vlinkColor \nvoid open() \nvoid close() \nvoid write( DOMString text) \nvoid writeln( DOMString text) \nvoid clear() \nvoid captureEvents() \nvoid releaseEvents() \nboolean hasFocus() \nHTMLQuoteElement.idl \nattribute DOMString cite \nCSSPrimitiveValue.idl \nvoid setFloatValue( unsignedshort unitType, float floatValue) \nfloat getFloatValue( unsignedshort unitType) \nvoid setStringValue( unsignedshort stringType, DOMString stringValue) \nDOMString getStringValue() \nCounter getCounterValue() \nRect getRectValue() \nRGBColor getRGBColorValue() \nEventListener.idl \nvoid handleEvent( Event evt) \nHTMLAreaElement.idl \nattribute DOMString accessKey \nattribute DOMString alt \nattribute DOMString coords \nattribute DOMString href \nattribute boolean noHref \nattribute DOMString ping \nattribute DOMString shape \nattribute DOMString target \nElementTimeControl.idl \nvoid beginElement() \nvoid beginElementAt( float offset) \nvoid endElement() \nvoid endElementAt( float offset) \nErrorEvent.idl \nvoid initErrorEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMString messageArg, DOMString filenameArg, unsignedlong linenoArg) \nNodeIterator.idl \nNode nextNode() \nNode previousNode() \nvoid detach() \nHTMLHeadElement.idl \nattribute DOMString profile \nHTMLUListElement.idl \nattribute boolean compact \nattribute DOMString type \nMediaList.idl \nattribute DOMString mediaText \nDOMString item( unsignedlong index) \nvoid deleteMedium( DOMString oldMedium) \nvoid appendMedium( DOMString newMedium) \nDataGridColumnList.idl \nDataGridColumn item( unsignedlong index) \nDataGridColumn add( DOMString id, DOMString label, DOMString type, boolean primary, unsignedshort sortable) \nvoid remove( DataGridColumn column) \nvoid move( DataGridColumn column, unsignedlong index) \nvoid clear() \nDOMParser.idl \nDocument parseFromString( DOMString str, DOMString contentType) \nSVGAnimatedNumber.idl \nattribute float baseVal \nUIEvent.idl \nvoid initUIEvent( DOMString type, boolean canBubble, boolean cancelable, DOMWindow view, long detail) \nWebKitPoint.idl \nattribute float x \nattribute float y \nSVGPathSegCurvetoQuadraticSmoothRel.idl \nattribute float x \nattribute float y \nStyleSheetList.idl \nStyleSheet item( unsignedlong index) \nConsole.idl \nvoid debug() \nvoid error() \nvoid info() \nvoid log() \nvoid warn() \nvoid dir() \nvoid dirxml() \nvoid trace() \nvoid assert( boolean condition) \nvoid count() \nvoid markTimeline() \nvoid profile( DOMString title) \nvoid profileEnd( DOMString title) \nvoid time( DOMString title) \nvoid timeEnd( DOMString title) \nvoid group() \nvoid groupCollapsed() \nvoid groupEnd() \nSVGAnimatedString.idl \nattribute DOMString baseVal \nHTMLMetaElement.idl \nattribute DOMString content \nattribute DOMString httpEquiv \nattribute DOMString name \nattribute DOMString scheme \nTouchList.idl \nTouch item( unsignedlong index) \nHTMLImageElement.idl \nattribute DOMString name \nattribute DOMString align \nattribute DOMString alt \nattribute DOMString border \nattribute long height \nattribute long hspace \nattribute boolean isMap \nattribute DOMString longDesc \nattribute DOMString src \nattribute DOMString useMap \nattribute long vspace \nattribute long width \nattribute DOMString lowsrc \nWebKitCSSKeyframesRule.idl \nattribute DOMString name \nvoid insertRule( DOMString rule) \nvoid deleteRule( DOMString key) \nWebKitCSSKeyframeRule findRule( DOMString key) \nCustomEvent.idl \nvoid initCustomEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMObject detailArg) \nSVGMatrix.idl \nattribute double a \nattribute double b \nattribute double c \nattribute double d \nattribute double e \nattribute double f \nSVGMatrix multiply( SVGMatrix secondMatrix) \nSVGMatrix inverse() \nStrictTypeChecking, SVGMatrix translate( float x, float y) \nStrictTypeChecking, SVGMatrix scale( float scaleFactor) \nStrictTypeChecking, SVGMatrix scaleNonUniform( float scaleFactorX, float scaleFactorY) \nStrictTypeChecking, SVGMatrix rotate( float angle) \nSVGMatrix rotateFromVector( float x, float y) \nSVGMatrix flipX() \nSVGMatrix flipY() \nStrictTypeChecking, SVGMatrix skewX( float angle) \nStrictTypeChecking, SVGMatrix skewY( float angle) \nHTMLIFrameElement.idl \nattribute DOMString align \nattribute DOMString frameBorder \nattribute DOMString height \nattribute DOMString longDesc \nattribute DOMString marginHeight \nattribute DOMString marginWidth \nattribute DOMString name \nattribute DOMString sandbox \nattribute DOMString scrolling \nattribute DOMString src \nattribute DOMString width \nSVGDocument getSVGDocument() \nCSSPageRule.idl \nattribute DOMString selectorText \nWebGLContextAttributes.idl \nattribute boolean alpha \nattribute boolean depth \nattribute boolean stencil \nattribute boolean antialias \nattribute boolean premultipliedAlpha \nattribute boolean preserveDrawingBuffer \nCanvasRenderingContext2D.idl \nattribute float globalAlpha \nattribute DOMString globalCompositeOperation \nattribute float lineWidth \nattribute DOMString lineCap \nattribute DOMString lineJoin \nattribute float miterLimit \nattribute float shadowOffsetX \nattribute float shadowOffsetY \nattribute float shadowBlur \nattribute DOMString shadowColor \nvoid save() \nvoid restore() \nvoid scale( float sx, float sy) \nvoid rotate( float angle) \nvoid translate( float tx, float ty) \nvoid transform( float m11, float m12, float m21, float m22, float dx, float dy) \nvoid setTransform( float m11, float m12, float m21, float m22, float dx, float dy) \nCanvasGradient createLinearGradient( float x0, float y0, float x1, float y1) \nCanvasGradient createRadialGradient( float x0, float y0, float r0, float x1, float y1, float r1) \nvoid clearRect( float x, float y, float width, float height) \nvoid fillRect( float x, float y, float width, float height) \nvoid beginPath() \nvoid closePath() \nvoid moveTo( float x, float y) \nvoid lineTo( float x, float y) \nvoid quadraticCurveTo( float cpx, float cpy, float x, float y) \nvoid bezierCurveTo( float cp1x, float cp1y, float cp2x, float cp2y, float x, float y) \nvoid arcTo( float x1, float y1, float x2, float y2, float radius) \nvoid rect( float x, float y, float width, float height) \nvoid arc( float x, float y, float radius, float startAngle, float endAngle, boolean anticlockwise) \nvoid fill() \nvoid stroke() \nvoid clip() \nboolean isPointInPath( float x, float y) \nattribute DOMString font \nattribute DOMString textAlign \nattribute DOMString textBaseline \nattribute custom strokeStyle \nattribute custom fillStyle \nTextMetrics measureText( DOMString text) \nvoid setAlpha( float alpha) \nvoid setCompositeOperation( DOMString compositeOperation) \nvoid setLineWidth( float width) \nvoid setLineCap( DOMString cap) \nvoid setLineJoin( DOMString join) \nvoid setMiterLimit( float limit) \nvoid clearShadow() \nvoid fillText( DOMString text, float x, float y, float maxWidth) \nvoid strokeText( DOMString text, float x, float y, float maxWidth) \nvoid setStrokeColor( DOMString color, float alpha) \nvoid setStrokeColor( float grayLevel, float alpha) \nvoid setStrokeColor( float r, float g, float b, float a) \nvoid setStrokeColor( float c, float m, float y, float k, float a) \nvoid setFillColor( DOMString color, float alpha) \nvoid setFillColor( float grayLevel, float alpha) \nvoid setFillColor( float r, float g, float b, float a) \nvoid setFillColor( float c, float m, float y, float k, float a) \nvoid strokeRect( float x, float y, float width, float height, float lineWidth) \nvoid drawImage( HTMLImageElement image, float x, float y) \nvoid drawImage( HTMLImageElement image, float x, float y, float width, float height) \nvoid drawImage( HTMLImageElement image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) \nvoid drawImage( HTMLCanvasElement canvas, float x, float y) \nvoid drawImage( HTMLCanvasElement canvas, float x, float y, float width, float height) \nvoid drawImage( HTMLCanvasElement canvas, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) \nvoid drawImage( HTMLVideoElement video, float x, float y) \nvoid drawImage( HTMLVideoElement video, float x, float y, float width, float height) \nvoid drawImage( HTMLVideoElement video, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) \nvoid drawImageFromRect( HTMLImageElement image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh, DOMString compositeOperation) \nvoid setShadow( float width, float height, float blur, DOMString color, float alpha) \nvoid setShadow( float width, float height, float blur, float grayLevel, float alpha) \nvoid setShadow( float width, float height, float blur, float r, float g, float b, float a) \nvoid setShadow( float width, float height, float blur, float c, float m, float y, float k, float a) \nCanvasPattern createPattern( HTMLCanvasElement canvas, DOMString repetitionType) \nCanvasPattern createPattern( HTMLImageElement image, DOMString repetitionType) \nvoid putImageData( ImageData imagedata, float dx, float dy, float dirtyX, float dirtyY, float dirtyWidth, float dirtyHeight) \nImageData createImageData( ImageData imagedata) \nImageData createImageData( float sw, float sh) \nvoid fillText() \nvoid strokeText() \nvoid setStrokeColor() \nvoid setFillColor() \nvoid strokeRect() \nvoid drawImage() \nvoid drawImageFromRect() \nvoid setShadow() \nvoid createPattern() \nvoid putImageData() \nImageData createImageData() \nImageData getImageData( float sx, float sy, float sw, float sh) \nBlob.idl \nBlob webkitSlice( longlong start, longlong end, DOMString contentType) \nTreeWalker.idl \nattribute Node currentNode \nNode parentNode() \nNode firstChild() \nNode lastChild() \nNode previousSibling() \nNode nextSibling() \nNode previousNode() \nNode nextNode() \nSVGLangSpace.idl \nattribute DOMString xmllang \nattribute DOMString xmlspace \nSVGAnimationElement.idl \nfloat getStartTime() \nfloat getCurrentTime() \nfloat getSimpleDuration() \nSVGStyleElement.idl \nattribute DOMString type \nattribute DOMString media \nattribute DOMString title \nDOMApplicationCache.idl \nattribute EventListener onchecking \nattribute EventListener onerror \nattribute EventListener onnoupdate \nattribute EventListener ondownloading \nattribute EventListener onprogress \nattribute EventListener onupdateready \nattribute EventListener oncached \nattribute EventListener onobsolete \nvoid update() \nvoid swapCache() \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nJavaScriptCallFrame.idl \nvoid evaluate( DOMString script) \nunsignedshort scopeType( int scopeIndex) \nPageTransitionEvent.idl \nvoid initPageTransitionEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, boolean persisted) \nSVGElementInstanceList.idl \nSVGElementInstance item( unsignedlong index) \nCSSRuleList.idl \nCSSRule item( unsignedlong index) \nSVGPathSegList.idl \nvoid clear() \nSVGPathSeg initialize( SVGPathSeg newItem) \nSVGPathSeg getItem( unsignedlong index) \nSVGPathSeg insertItemBefore( SVGPathSeg newItem, unsignedlong index) \nSVGPathSeg replaceItem( SVGPathSeg newItem, unsignedlong index) \nSVGPathSeg removeItem( unsignedlong index) \nSVGPathSeg appendItem( SVGPathSeg newItem) \nCompositionEvent.idl \nvoid initCompositionEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMWindow viewArg, DOMString dataArg) \nEventTarget.idl \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event event) \nHTMLHRElement.idl \nattribute DOMString align \nattribute boolean noShade \nattribute DOMString size \nattribute DOMString width \nHTMLMarqueeElement.idl \nattribute DOMString behavior \nattribute DOMString bgColor \nattribute DOMString direction \nattribute DOMString height \nattribute unsignedlong hspace \nattribute long loop \nattribute long scrollAmount \nattribute long scrollDelay \nattribute boolean trueSpeed \nattribute unsignedlong vspace \nattribute DOMString width \nvoid start() \nvoid stop() \nCharacterData.idl \nattribute DOMString data \nDOMString substringData( unsignedlong offset, unsignedlong length) \nvoid appendData( DOMString data) \nvoid insertData( unsignedlong offset, DOMString data) \nvoid deleteData( unsignedlong offset, unsignedlong length) \nvoid replaceData( unsignedlong offset, unsignedlong length, DOMString data) \nSVGFEMorphologyElement.idl \nvoid setRadius( float radiusX, float radiusY) \nNode.idl \nattribute DOMString nodeValue \nattribute DOMString prefix \nattribute DOMString textContent \nNode insertBefore( Node newChild, Node refChild) \nNode replaceChild( Node newChild, Node oldChild) \nNode removeChild( Node oldChild) \nNode appendChild( Node newChild) \nboolean hasChildNodes() \nNode cloneNode( boolean deep) \nvoid normalize() \nboolean isSupported( DOMString feature, DOMString version) \nboolean hasAttributes() \nboolean isSameNode( Node other) \nboolean isEqualNode( Node other) \nDOMString lookupPrefix( DOMString namespaceURI) \nboolean isDefaultNamespace( DOMString namespaceURI) \nDOMString lookupNamespaceURI( DOMString prefix) \nunsignedshort compareDocumentPosition( Node other) \nDOMObject getFeature( DOMString feature, DOMString version) \nDOMUserData setUserData( DOMString key, DOMUserData data, UserDataHandler handler) \nDOMUserData getUserData( DOMString key) \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event event) \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event event) \nIDBDatabaseError.idl \nattribute unsignedshort code \nattribute DOMString message \nXPathNSResolver.idl \nDOMString lookupNamespaceURI( DOMString prefix) \nSVGPointList.idl \nvoid clear() \nSVGPoint initialize( SVGPoint item) \nSVGPoint getItem( unsignedlong index) \nSVGPoint insertItemBefore( SVGPoint item, unsignedlong index) \nSVGPoint replaceItem( SVGPoint item, unsignedlong index) \nSVGPoint removeItem( unsignedlong index) \nSVGPoint appendItem( SVGPoint item) \nSVGPathSegCurvetoQuadraticSmoothAbs.idl \nattribute float x \nattribute float y \nSVGStringList.idl \nvoid clear() \nDOMString initialize( DOMString item) \nDOMString getItem( unsignedlong index) \nDOMString insertItemBefore( DOMString item, unsignedlong index) \nDOMString replaceItem( DOMString item, unsignedlong index) \nDOMString removeItem( unsignedlong index) \nDOMString appendItem( DOMString item) \nCSSStyleDeclaration.idl \nattribute DOMString cssText \nDOMString getPropertyValue( DOMString propertyName) \nCSSValue getPropertyCSSValue( DOMString propertyName) \nDOMString removeProperty( DOMString propertyName) \nDOMString getPropertyPriority( DOMString propertyName) \nvoid setProperty( DOMString propertyName, DOMString value, DOMString priority) \nDOMString item( unsignedlong index) \nDOMString getPropertyShorthand( DOMString propertyName) \nboolean isPropertyImplicit( DOMString propertyName) \nStorage.idl \nDOMString key( unsignedlong index) \nDOMString getItem( DOMString key) \nvoid setItem( DOMString key, DOMString data) \nvoid removeItem( DOMString key) \nvoid clear() \nHTMLDirectoryElement.idl \nattribute boolean compact \nInspectorFrontendHost.idl \nvoid loaded() \nvoid closeWindow() \nvoid disconnectFromBackend() \nvoid bringToFront() \nvoid inspectedURLChanged( DOMString newURL) \nvoid requestAttachWindow() \nvoid requestDetachWindow() \nvoid setAttachedWindowHeight( unsignedlong height) \nvoid moveWindowBy( float x, float y) \nvoid setExtensionAPI( DOMString script) \nDOMString localizedStringsURL() \nDOMString hiddenPanels() \nvoid saveSessionSetting( DOMString key, DOMString value) \nDOMString loadSessionSetting( DOMString key) \nvoid copyText( DOMString text) \nDOMString platform() \nDOMString port() \nvoid showContextMenu( MouseEvent event, DOMObject items) \nvoid sendMessageToBackend( DOMString message) \nHTMLTableSectionElement.idl \nattribute DOMString align \nattribute DOMString ch \nattribute DOMString chOff \nattribute DOMString vAlign \nHTMLElement insertRow( long index) \nvoid deleteRow( long index) \nWorkerContext.idl \nattribute MessageEventConstructor MessageEvent \nattribute WorkerLocationConstructor WorkerLocation \nattribute MessageChannelConstructor MessageChannel \nattribute EventSourceConstructor EventSource \nattribute XMLHttpRequestConstructor XMLHttpRequest \nattribute WebKitBlobBuilderConstructor WebKitBlobBuilder \nattribute FileReaderConstructor FileReader \nattribute FileReaderSyncConstructor FileReaderSync \nattribute WorkerContext self \nattribute WorkerLocation location \nattribute EventListener onerror \nattribute WorkerNavigator navigator \nattribute FlagsConstructor Flags \nattribute FileErrorConstructor FileError \nattribute FileExceptionConstructor FileException \nvoid close() \nvoid importScripts( DOMString urls) \nDatabase openDatabase( DOMString name, DOMString version, DOMString displayName, unsignedlong estimatedSize, DatabaseCallback creationCallback) \nDatabaseSync openDatabaseSync( DOMString name, DOMString version, DOMString displayName, unsignedlong estimatedSize, DatabaseCallback creationCallback) \nlong setTimeout( TimeoutHandler handler, long timeout) \nvoid clearTimeout( long handle) \nlong setInterval( TimeoutHandler handler, long timeout) \nvoid clearInterval( long handle) \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture)  \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nvoid requestFileSystem( unsignedshort type, longlong size, FileSystemCallback successCallback, ErrorCallback errorCallback) \nDOMFileSystemSync requestFileSystemSync( unsignedshort type, longlong size)  \nvoid resolveLocalFileSystemURL( DOMString url, EntryCallback successCallback, ErrorCallback errorCallback) \nEntrySync resolveLocalFileSystemSyncURL( DOMString url)  \nClientRectList.idl \nClientRect item( unsignedlong index) \nTouchEvent.idl \nvoid initTouchEvent( TouchList touches, TouchList targetTouches, TouchList changedTouches, DOMString type, DOMWindow view, long screenX, long screenY, long clientX, long clientY, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey) \nSVGAngle.idl \nattribute float value \nattribute float valueInSpecifiedUnits \nattribute DOMString valueAsString \nvoid newValueSpecifiedUnits( unsignedshort unitType, float valueInSpecifiedUnits) \nvoid convertToSpecifiedUnits( unsignedshort unitType) \nHTMLTextAreaElement.idl \nattribute DOMString defaultValue \nattribute DOMString accessKey \nattribute long cols \nattribute boolean disabled \nattribute boolean autofocus \nattribute long maxLength \nattribute DOMString name \nattribute DOMString placeholder \nattribute boolean readOnly \nattribute boolean required \nattribute long rows \nattribute DOMString value \nattribute long selectionStart \nattribute long selectionEnd \nvoid select() \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nvoid setSelectionRange( long start, long end) \nSQLStatementErrorCallback.idl \nboolean handleEvent( SQLTransaction transaction, SQLError error) \nHistory.idl \nvoid back() \nvoid forward() \nvoid go( long distance) \nvoid pushState( any data, DOMString title, optional DOMString url) \nvoid replaceState( any data, DOMString title, optional DOMString url) \nHTMLDivElement.idl \nattribute DOMString align \nCSSValue.idl \nattribute DOMString cssText \nDatabaseCallback.idl \nboolean handleEvent( Database database) \nboolean handleEvent( DatabaseSync database) \nWebKitCSSKeyframeRule.idl \nattribute DOMString keyText \nRangeException.idl \nDOMString toString() \nXMLHttpRequest.idl \nattribute EventListener onabort \nattribute EventListener onerror \nattribute EventListener onload \nattribute EventListener onloadstart \nattribute EventListener onprogress \nattribute EventListener onreadystatechange \nattribute boolean asBlob \nattribute boolean withCredentials \nattribute DOMString responseType \nvoid open( DOMString method, DOMString url, boolean async, DOMString user, DOMString password) \nvoid setRequestHeader( DOMString header, DOMString value) \nvoid send( Document data) \nvoid abort() \nDOMString getAllResponseHeaders() \nDOMString getResponseHeader( DOMString header) \nvoid overrideMimeType( DOMString override) \nvoid addEventListener( DOMString type,EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nHTMLSourceElement.idl \nattribute DOMString src \nattribute DOMString type \nattribute DOMString media \nHTMLBodyElement.idl \nattribute DOMString aLink \nattribute DOMString background \nattribute DOMString bgColor \nattribute DOMString link \nattribute DOMString text \nattribute DOMString vLink \nattribute EventListener onbeforeunload \nattribute EventListener onhashchange \nattribute EventListener onmessage \nattribute EventListener onoffline \nattribute EventListener ononline \nattribute EventListener onpopstate \nattribute EventListener onresize \nattribute EventListener onstorage \nattribute EventListener onunload \nattribute EventListener onorientationchange \nattribute EventListener onblur \nattribute EventListener onerror \nattribute EventListener onfocus \nattribute EventListener onload \nHTMLHeadingElement.idl \nattribute DOMString align \nHTMLMenuElement.idl \nattribute boolean compact \nNotificationCenter.idl \nNotification createHTMLNotification( DOMString url) \nNotification createNotification( DOMString iconUrl, DOMString title, DOMString body) \nint checkPermission() \nvoid requestPermission( VoidCallback callback) \nSVGPathSegLinetoAbs.idl \nattribute float x \nattribute float y \nSQLResultSetRowList.idl \nDOMObject item( unsignedlong index) \nHTMLCanvasElement.idl \nattribute long width \nattribute long height \nDOMString toDataURL( DOMString type) \nDOMObject getContext( DOMString contextId) \nSharedWorkerContext.idl \nattribute EventListener onconnect \nHTMLMediaElement.idl \nattribute DOMString src \nattribute DOMString preload \nattribute float currentTime \nattribute float defaultPlaybackRate \nattribute float playbackRate \nattribute boolean autoplay \nattribute boolean loop \nattribute boolean controls \nattribute float volume \nattribute boolean muted \nattribute boolean webkitPreservesPitch \nattribute boolean webkitClosedCaptionsVisible \nvoid load() \nDOMString canPlayType( DOMString type) \nvoid play() \nvoid pause() \nCSSStyleRule.idl \nattribute DOMString selectorText \nSVGLocatable.idl \nSVGRect getBBox() \nSVGMatrix getCTM() \nSVGMatrix getScreenCTM() \nSVGMatrix getTransformToElement( SVGElement element) \nDOMCoreException.idl \nDOMString toString() \nMouseEvent.idl \nvoid initMouseEvent( DOMString type, boolean canBubble, boolean cancelable, DOMWindow view, long detail, long screenX, long screenY, long clientX, long clientY, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey, unsignedshort button, EventTarget relatedTarget)  \nWebGLRenderingContext.idl \nvoid activeTexture( unsignedlong texture) \nvoid attachShader( WebGLProgram program, WebGLShader shader) \nvoid bindAttribLocation( WebGLProgram program, unsignedlong index, DOMString name) \nvoid bindBuffer( unsignedlong target, WebGLBuffer buffer) \nvoid bindFramebuffer( unsignedlong target, WebGLFramebuffer framebuffer) \nvoid bindRenderbuffer( unsignedlong target, WebGLRenderbuffer renderbuffer) \nvoid bindTexture( unsignedlong target, WebGLTexture texture) \nvoid blendColor( float red, float green, float blue, float alpha) \nvoid blendEquation( unsignedlong mode ) \nvoid blendEquationSeparate( unsignedlong modeRGB, unsignedlong modeAlpha) \nvoid blendFunc( unsignedlong sfactor, unsignedlong dfactor) \nvoid blendFuncSeparate( unsignedlong srcRGB, unsignedlong dstRGB, unsignedlong srcAlpha, unsignedlong dstAlpha) \nvoid bufferData( unsignedlong target, ArrayBuffer data, unsignedlong usage) \nvoid bufferData( unsignedlong target, ArrayBufferView data, unsignedlong usage) \nvoid bufferData( unsignedlong target, long size, unsignedlong usage) \nvoid bufferSubData( unsignedlong target, long offset, ArrayBuffer data) \nvoid bufferSubData( unsignedlong target, long offset, ArrayBufferView data) \nunsignedlong checkFramebufferStatus( unsignedlong target) \nvoid clear( unsignedlong mask) \nvoid clearColor( float red, float green, float blue, float alpha) \nvoid clearDepth( float depth) \nvoid clearStencil( long s) \nvoid colorMask( boolean red, boolean green, boolean blue, boolean alpha) \nvoid compileShader( WebGLShader shader) \nvoid copyTexImage2D( unsignedlong target, long level, unsignedlong internalformat, long x, long y, long width, long height, long border) \nvoid copyTexSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, long x, long y, long width, long height) \nWebGLBuffer createBuffer() \nWebGLFramebuffer createFramebuffer() \nWebGLProgram createProgram() \nWebGLRenderbuffer createRenderbuffer() \nWebGLShader createShader( unsignedlong type) \nWebGLTexture createTexture() \nvoid cullFace( unsignedlong mode) \nvoid deleteBuffer( WebGLBuffer buffer) \nvoid deleteFramebuffer( WebGLFramebuffer framebuffer) \nvoid deleteProgram( WebGLProgram program) \nvoid deleteRenderbuffer( WebGLRenderbuffer renderbuffer) \nvoid deleteShader( WebGLShader shader) \nvoid deleteTexture( WebGLTexture texture) \nvoid depthFunc( unsignedlong func) \nvoid depthMask( boolean flag) \nvoid depthRange( float zNear, float zFar) \nvoid detachShader( WebGLProgram program, WebGLShader shader) \nvoid disable( unsignedlong cap) \nvoid disableVertexAttribArray( unsignedlong index) \nvoid drawArrays( unsignedlong mode, long first, long count) \nvoid drawElements( unsignedlong mode, long count, unsignedlong type, long offset) \nvoid enable( unsignedlong cap) \nvoid enableVertexAttribArray( unsignedlong index) \nvoid finish() \nvoid flush() \nvoid framebufferRenderbuffer( unsignedlong target, unsignedlong attachment, unsignedlong renderbuffertarget, WebGLRenderbuffer renderbuffer) \nvoid framebufferTexture2D( unsignedlong target, unsignedlong attachment, unsignedlong textarget, WebGLTexture texture, long level) \nvoid frontFace( unsignedlong mode) \nvoid generateMipmap( unsignedlong target) \nWebGLActiveInfo getActiveAttrib( WebGLProgram program, unsignedlong index) \nWebGLActiveInfo getActiveUniform( WebGLProgram program, unsignedlong index) \nvoid getAttachedShaders( WebGLProgram program) \nint getAttribLocation( WebGLProgram program, DOMString name) \nvoid getBufferParameter() \nWebGLContextAttributes getContextAttributes() \nunsignedlong getError() \nvoid getExtension( DOMString name) \nvoid getFramebufferAttachmentParameter() \nvoid getParameter() \nvoid getProgramParameter() \nDOMString getProgramInfoLog( WebGLProgram program) \nvoid getRenderbufferParameter() \nvoid getShaderParameter() \nDOMString getShaderInfoLog( WebGLShader shader) \nDOMString getShaderSource( WebGLShader shader) \nvoid getSupportedExtensions() \nvoid getTexParameter() \nvoid getUniform() \nWebGLUniformLocation getUniformLocation( WebGLProgram program, DOMString name) \nvoid getVertexAttrib() \nlong getVertexAttribOffset( unsignedlong index, unsignedlong pname) \nvoid hint( unsignedlong target, unsignedlong mode) \nboolean isBuffer( WebGLBuffer buffer) \nboolean isContextLost() \nboolean isEnabled( unsignedlong cap) \nboolean isFramebuffer( WebGLFramebuffer framebuffer) \nboolean isProgram( WebGLProgram program) \nboolean isRenderbuffer( WebGLRenderbuffer renderbuffer) \nboolean isShader( WebGLShader shader) \nboolean isTexture( WebGLTexture texture) \nvoid lineWidth( float width) \nvoid linkProgram( WebGLProgram program) \nvoid pixelStorei( unsignedlong pname, long param) \nvoid polygonOffset( float factor, float units) \nvoid readPixels( long x, long y, long width, long height, unsignedlong format, unsignedlong type, ArrayBufferView pixels) \nvoid releaseShaderCompiler() \nvoid renderbufferStorage( unsignedlong target, unsignedlong internalformat, long width, long height) \nvoid sampleCoverage( float value, boolean invert) \nvoid scissor( long x, long y, long width, long height) \nvoid shaderSource( WebGLShader shader, DOMString string) \nvoid stencilFunc( unsignedlong func, long ref, unsignedlong mask) \nvoid stencilFuncSeparate( unsignedlong face, unsignedlong func, long ref, unsignedlong mask) \nvoid stencilMask( unsignedlong mask) \nvoid stencilMaskSeparate( unsignedlong face, unsignedlong mask) \nvoid stencilOp( unsignedlong fail, unsignedlong zfail, unsignedlong zpass) \nvoid stencilOpSeparate( unsignedlong face, unsignedlong fail, unsignedlong zfail, unsignedlong zpass) \nvoid texParameterf( unsignedlong target, unsignedlong pname, float param) \nvoid texParameteri( unsignedlong target, unsignedlong pname, long param) \nvoid texImage2D( unsignedlong target, long level, unsignedlong internalformat, long width, long height, long border, unsignedlong format, unsignedlong type, ArrayBufferView pixels) \nvoid texImage2D( unsignedlong target, long level, unsignedlong internalformat, unsignedlong format, unsignedlong type, ImageData pixels) \nvoid texImage2D( unsignedlong target, long level, unsignedlong internalformat, unsignedlong format, unsignedlong type, HTMLImageElement image) \nvoid texImage2D( unsignedlong target, long level, unsignedlong internalformat, unsignedlong format, unsignedlong type, HTMLCanvasElement canvas) \nvoid texImage2D( unsignedlong target, long level, unsignedlong internalformat, unsignedlong format, unsignedlong type, HTMLVideoElement video) \nvoid texSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, long width, long height, unsignedlong format, unsignedlong type, ArrayBufferView pixels) \nvoid texSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, unsignedlong format, unsignedlong type, ImageData pixels) \nvoid texSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, unsignedlong format, unsignedlong type, HTMLImageElement image) \nvoid texSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, unsignedlong format, unsignedlong type, HTMLCanvasElement canvas) \nvoid texSubImage2D( unsignedlong target, long level, long xoffset, long yoffset, unsignedlong format, unsignedlong type, HTMLVideoElement video) \nvoid uniform1f( WebGLUniformLocation location, float x) \nvoid uniform1fv( WebGLUniformLocation location, Float32Array v) \nvoid uniform1i( WebGLUniformLocation location, long x) \nvoid uniform1iv( WebGLUniformLocation location, Int32Array v) \nvoid uniform2f( WebGLUniformLocation location, float x, float y) \nvoid uniform2fv( WebGLUniformLocation location, Float32Array v) \nvoid uniform2i( WebGLUniformLocation location, long x, long y) \nvoid uniform2iv( WebGLUniformLocation location, Int32Array v) \nvoid uniform3f( WebGLUniformLocation location, float x, float y, float z) \nvoid uniform3fv( WebGLUniformLocation location, Float32Array v) \nvoid uniform3i( WebGLUniformLocation location, long x, long y, long z) \nvoid uniform3iv( WebGLUniformLocation location, Int32Array v) \nvoid uniform4f( WebGLUniformLocation location, float x, float y, float z, float w) \nvoid uniform4fv( WebGLUniformLocation location, Float32Array v) \nvoid uniform4i( WebGLUniformLocation location, long x, long y, long z, long w) \nvoid uniform4iv( WebGLUniformLocation location, Int32Array v) \nvoid uniformMatrix2fv( WebGLUniformLocation location, boolean transpose, Float32Array array) \nvoid uniformMatrix3fv( WebGLUniformLocation location, boolean transpose, Float32Array array) \nvoid uniformMatrix4fv( WebGLUniformLocation location, boolean transpose, Float32Array array) \nvoid useProgram( WebGLProgram program) \nvoid validateProgram( WebGLProgram program) \nvoid vertexAttrib1f( unsignedlong indx, float x) \nvoid vertexAttrib1fv( unsignedlong indx, Float32Array values) \nvoid vertexAttrib2f( unsignedlong indx, float x, float y) \nvoid vertexAttrib2fv( unsignedlong indx, Float32Array values) \nvoid vertexAttrib3f( unsignedlong indx, float x, float y, float z) \nvoid vertexAttrib3fv( unsignedlong indx, Float32Array values) \nvoid vertexAttrib4f( unsignedlong indx, float x, float y, float z, float w) \nvoid vertexAttrib4fv( unsignedlong indx, Float32Array values) \nvoid vertexAttribPointer( unsignedlong indx, long size, unsignedlong type, boolean normalized, long stride, long offset) \nvoid viewport( long x, long y, long width, long height) \nSQLTransactionErrorCallback.idl \nboolean handleEvent( SQLError error) \nSVGPathSegMovetoRel.idl \nattribute float x \nattribute float y \nOverflowEvent.idl \nvoid initOverflowEvent( unsignedshort orient, boolean horizontalOverflow, boolean verticalOverflow) \nHTMLAppletElement.idl \nattribute DOMString align \nattribute DOMString alt \nattribute DOMString archive \nattribute DOMString code \nattribute DOMString codeBase \nattribute DOMString height \nattribute DOMString hspace \nattribute long hspace \nattribute DOMString name \nattribute DOMString object \nattribute DOMString vspace \nattribute long vspace \nattribute DOMString width \nHTMLTableCaptionElement.idl \nattribute DOMString align \nSVGFEGaussianBlurElement.idl \nvoid setStdDeviation( float stdDeviationX, float stdDeviationY) \nXMLHttpRequestException.idl \nDOMString toString() \nEventException.idl \nDOMString toString() \nEvent.idl \nattribute boolean returnValue \nattribute boolean cancelBubble \nvoid stopPropagation() \nvoid preventDefault() \nvoid initEvent( DOMString eventTypeArg, boolean canBubbleArg, boolean cancelableArg) \nvoid stopImmediatePropagation() \nboolean isMutationEvent() \nboolean isMouseEvent() \nboolean isUIEvent() \nStyleSheet.idl \nattribute boolean disabled \nboolean isCSSStyleSheet() \nSVGDocument.idl \nEvent createEvent( DOMString eventType) \nXMLHttpRequestUpload.idl \nattribute EventListener onabort \nattribute EventListener onerror \nattribute EventListener onload \nattribute EventListener onloadstart \nattribute EventListener onprogress \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nSVGElementInstance.idl \nattribute EventListener onabort \nattribute EventListener onblur \nattribute EventListener onchange \nattribute EventListener onclick \nattribute EventListener oncontextmenu \nattribute EventListener ondblclick \nattribute EventListener onerror \nattribute EventListener onfocus \nattribute EventListener oninput \nattribute EventListener onkeydown \nattribute EventListener onkeypress \nattribute EventListener onkeyup \nattribute EventListener onload \nattribute EventListener onmousedown \nattribute EventListener onmousemove \nattribute EventListener onmouseout \nattribute EventListener onmouseover \nattribute EventListener onmouseup \nattribute EventListener onmousewheel \nattribute EventListener onbeforecut \nattribute EventListener oncut \nattribute EventListener onbeforecopy \nattribute EventListener oncopy \nattribute EventListener onbeforepaste \nattribute EventListener onpaste \nattribute EventListener ondragenter \nattribute EventListener ondragover \nattribute EventListener ondragleave \nattribute EventListener ondrop \nattribute EventListener ondragstart \nattribute EventListener ondrag \nattribute EventListener ondragend \nattribute EventListener onreset \nattribute EventListener onresize \nattribute EventListener onscroll \nattribute EventListener onsearch \nattribute EventListener onselect \nattribute EventListener onselectstart \nattribute EventListener onsubmit \nattribute EventListener onunload \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event event) \nSVGPathSegCurvetoQuadraticRel.idl \nattribute float x \nattribute float y \nattribute float x1 \nattribute float y1 \nSVGPathSegCurvetoCubicSmoothRel.idl \nattribute float x \nattribute float y \nattribute float x2 \nattribute float y2 \nDOMImplementation.idl \nboolean hasFeature( DOMString feature, DOMString version) \nDocumentType createDocumentType( DOMString qualifiedName, DOMString publicId, DOMString systemId) \nDocument createDocument( DOMString namespaceURI, DOMString qualifiedName, DocumentType doctype) \nCSSStyleSheet createCSSStyleSheet( DOMString title, DOMString media) \nHTMLDocument createHTMLDocument( DOMString title) \nHTMLScriptElement.idl \nattribute DOMString text \nattribute DOMString htmlFor \nattribute DOMString event \nattribute DOMString charset \nattribute boolean async \nattribute boolean defer \nattribute DOMString src \nattribute DOMString type \nWebKitTransitionEvent.idl \nvoid initWebKitTransitionEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMString propertyNameArg, double elapsedTimeArg) \nSVGRect.idl \nattribute float x \nattribute float y \nattribute float width \nattribute float height \nTestCallback.idl \nboolean callbackWithNoParam() \nboolean callbackWithClass1Param( Class1 class1Param) \nboolean callbackWithClass2Param( Class2 class2Param, DOMString strArg) \nlong callbackWithNonBoolReturnType( Class3 class3Param) \nlong customCallback( Class5 class5Param, Class6 class6Param) \nboolean callbackWithStringList( DOMStringList listParam) \nSVGPathSegCurvetoCubicRel.idl \nattribute float x \nattribute float y \nattribute float x1 \nattribute float y1 \nattribute float x2 \nattribute float y2 \nTestObj.idl \nattribute short shortAttr \nattribute unsignedshort unsignedShortAttr \nattribute long intAttr \nattribute longlong longLongAttr \nattribute unsignedlonglong unsignedLongLongAttr \nattribute DOMString stringAttr \nattribute TestObj testObjAttr \nattribute TestObj XMLObjAttr \nattribute boolean create \nattribute DOMString reflectedStringAttr \nattribute long reflectedIntegralAttr \nattribute unsignedlong reflectedUnsignedIntegralAttr \nattribute boolean reflectedBooleanAttr \nattribute DOMString reflectedURLAttr \nattribute DOMString reflectedNonEmptyURLAttr \nattribute DOMString reflectedStringAttr \nattribute long reflectedCustomIntegralAttr \nattribute boolean reflectedCustomBooleanAttr \nattribute DOMString reflectedCustomURLAttr \nattribute DOMString reflectedCustomNonEmptyURLAttr \nattribute long attrWithGetterException \nattribute long attrWithSetterException \nattribute DOMString stringAttrWithGetterException \nattribute DOMString stringAttrWithSetterException \nattribute long customAttr \nattribute long conditionalAttr1 \nattribute long conditionalAttr2 \nattribute long conditionalAttr3 \nattribute long enabledAtRuntimeAttr1 \nattribute long enabledAtRuntimeAttr2 \nattribute long id \nvoid voidMethod() \nvoid voidMethodWithArgs( long intArg, DOMString strArg, TestObj objArg) \nlong intMethod() \nlong intMethodWithArgs( long intArg, DOMString strArg, TestObj objArg) \nTestObj objMethod() \nTestObj objMethodWithArgs( long intArg, DOMString strArg, TestObj objArg) \nTestObj methodThatRequiresAllArgs( DOMString strArg, TestObj objArg) \nTestObj methodThatRequiresAllArgsAndThrows( DOMString strArg, TestObj objArg) \nvoid serializedValue( SerializedScriptValue serializedArg) \nvoid idbKey( IDBKey key) \nvoid optionsObject( OptionsObject oo, OptionsObject ooo) \nvoid methodWithException() \nvoid customMethod() \nvoid customMethodWithArgs( long intArg, DOMString strArg, TestObj objArg) \nvoid customArgsAndException( log intArg) \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid withDynamicFrame() \nvoid withDynamicFrameAndArg( long intArg) \nvoid withDynamicFrameAndOptionalArg( long intArg, long optionalArg) \nvoid withDynamicFrameAndUserGesture( long intArg) \nvoid withDynamicFrameAndUserGestureASAD( long intArg, long optionalArg) \nvoid withScriptStateVoid() \nTestObj withScriptStateObj() \nvoid withScriptStateVoidException() \nTestObj withScriptStateObjException() \nvoid withScriptExecutionContext() \nvoid methodWithOptionalArg( long opt) \nvoid methodWithNonOptionalArgAndOptionalArg( long nonOpt, long opt) \nvoid methodWithNonOptionalArgAndTwoOptionalArgs( long nonOpt, long opt1, long opt2) \nvoid methodWithCallbackArg( TestCallback callback) \nvoid methodWithNonCallbackArgAndCallbackArg( long nonCallback, TestCallback callback) \nvoid methodWithCallbackAndOptionalArg( TestCallback callback) \nvoid overloadedMethod( TestObj objArg, DOMString strArg) \nvoid overloadedMethod( TestObj objArg, long intArg) \nvoid overloadedMethod( DOMString strArg) \nvoid overloadedMethod( long intArg) \nvoid overloadedMethod( TestCallback callback) \nvoid classMethod() \nlong classMethodWithOptional( long arg) \nvoid enabledAtRuntimeMethod1( int intArg) \nvoid enabledAtRuntimeMethod2( int intArg) \nSVGMarkerElement.idl \nvoid setOrientToAuto() \nvoid setOrientToAngle( SVGAngle angle) \nSVGPathSegCurvetoCubicSmoothAbs.idl \nattribute float x \nattribute float y \nattribute float x2 \nattribute float y2 \nHTMLBaseFontElement.idl \nattribute DOMString color \nattribute DOMString face \nattribute long size \nSVGPathElement.idl \nfloat getTotalLength() \nSVGPoint getPointAtLength( float distance) \nunsignedlong getPathSegAtLength( float distance) \nSVGPathSegClosePath createSVGPathSegClosePath() \nSVGPathSegMovetoAbs createSVGPathSegMovetoAbs( float x, float y)  \nSVGPathSegMovetoRel createSVGPathSegMovetoRel( float x, float y) \nSVGPathSegLinetoAbs createSVGPathSegLinetoAbs( float x, float y) \nSVGPathSegLinetoRel createSVGPathSegLinetoRel( float x, float y) \nSVGPathSegCurvetoCubicAbs createSVGPathSegCurvetoCubicAbs( float x, float y, float x1, float y1, float x2, float y2) \nSVGPathSegCurvetoCubicRel createSVGPathSegCurvetoCubicRel( float x, float y, float x1, float y1, float x2, float y2) \nSVGPathSegCurvetoQuadraticAbs createSVGPathSegCurvetoQuadraticAbs( float x, float y, float x1, float y1)  \nSVGPathSegCurvetoQuadraticRel createSVGPathSegCurvetoQuadraticRel( float x, float y, float x1, float y1) \nSVGPathSegArcAbs createSVGPathSegArcAbs( float x, float y, float r1, float r2, float angle, boolean largeArcFlag, boolean sweepFlag) \nSVGPathSegArcRel createSVGPathSegArcRel( float x, float y, float r1, float r2, float angle, boolean largeArcFlag, boolean sweepFlag) \nSVGPathSegLinetoHorizontalAbs createSVGPathSegLinetoHorizontalAbs( float x) \nSVGPathSegLinetoHorizontalRel createSVGPathSegLinetoHorizontalRel( float x) \nSVGPathSegLinetoVerticalAbs createSVGPathSegLinetoVerticalAbs( float y) \nSVGPathSegLinetoVerticalRel createSVGPathSegLinetoVerticalRel( float y) \nSVGPathSegCurvetoCubicSmoothAbs createSVGPathSegCurvetoCubicSmoothAbs( float x, float y, float x2, float y2) \nSVGPathSegCurvetoCubicSmoothRel createSVGPathSegCurvetoCubicSmoothRel( float x, float y, float x2, float y2) \nSVGPathSegCurvetoQuadraticSmoothAbs createSVGPathSegCurvetoQuadraticSmoothAbs( float x, float y)  \nSVGPathSegCurvetoQuadraticSmoothRel createSVGPathSegCurvetoQuadraticSmoothRel( float x, float y) \nStorageEvent.idl \nvoid initStorageEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMString keyArg, DOMString oldValueArg, DOMString newValueArg, DOMString urlArg, Storage storageAreaArg) \nSVGNumberList.idl \nvoid clear() \nSVGNumber initialize( SVGNumber item) \nSVGNumber getItem( unsignedlong index) \nSVGNumber insertItemBefore( SVGNumber item, unsignedlong index) \nSVGNumber replaceItem( SVGNumber item, unsignedlong index) \nSVGNumber removeItem( unsignedlong index) \nSVGNumber appendItem( SVGNumber item) \nAbstractWorker.idl \nattribute EventListener onerror \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nSVGTransform.idl \nvoid setMatrix( SVGMatrix matrix) \nvoid setTranslate( float tx, float ty) \nvoid setScale( float sx, float sy) \nvoid setRotate( float angle, float cx, float cy) \nvoid setSkewX( float angle) \nvoid setSkewY( float angle) \nDOMSelection.idl \nvoid collapse( Node node, long index) \nvoid collapseToEnd() \nvoid collapseToStart() \nvoid deleteFromDocument() \nboolean containsNode( Node node, boolean allowPartial) \nvoid selectAllChildren( Node node) \nvoid extend( Node node, long offset) \nRange getRangeAt( long index) \nvoid removeAllRanges() \nvoid addRange( Range range) \nDOMString toString() \nvoid modify( DOMString alter, DOMString direction, DOMString granularity) \nvoid setBaseAndExtent( Node baseNode, long baseOffset, Node extentNode, long extentOffset) \nvoid setPosition( Node node, long offset) \nvoid empty() \nSVGTextContentElement.idl \nlong getNumberOfChars() \nfloat getComputedTextLength() \nfloat getSubStringLength( unsignedlong offset, unsignedlong length) \nSVGPoint getStartPositionOfChar( unsignedlong offset) \nSVGPoint getEndPositionOfChar( unsignedlong offset) \nSVGRect getExtentOfChar( unsignedlong offset) \nfloat getRotationOfChar( unsignedlong offset) \nlong getCharNumAtPosition( SVGPoint point) \nvoid selectSubString( unsignedlong offset, unsignedlong length) \nTimeRanges.idl \nfloat start( unsignedlong index) \nfloat end( unsignedlong index) \nHTMLFrameElement.idl \nattribute DOMString frameBorder \nattribute DOMString longDesc \nattribute DOMString marginHeight \nattribute DOMString marginWidth \nattribute DOMString name \nattribute boolean noResize \nattribute DOMString scrolling \nattribute DOMString src \nattribute DOMString location \nSVGDocument getSVGDocument() \nProcessingInstruction.idl \nattribute DOMString data \nDatabase.idl \nvoid changeVersion( DOMString oldVersion, DOMString newVersion, SQLTransactionCallback callback, SQLTransactionErrorCallback errorCallback, VoidCallback successCallback) \nvoid transaction( SQLTransactionCallback callback, SQLTransactionErrorCallback errorCallback, VoidCallback successCallback) \nvoid readTransaction( SQLTransactionCallback callback, SQLTransactionErrorCallback errorCallback, VoidCallback successCallback) \nSVGPathSegCurvetoCubicAbs.idl \nattribute float x \nattribute float y \nattribute float x1 \nattribute float y1 \nattribute float x2 \nattribute float y2 \nHTMLDataGridElement.idl \nattribute DataGridDataSource dataSource \nHTMLElement.idl \nattribute DOMString id \nattribute DOMString title \nattribute DOMString lang \nattribute DOMString dir \nattribute DOMString className \nattribute long tabIndex \nattribute boolean draggable \nattribute boolean hidden \nattribute DOMString innerHTML \nattribute DOMString innerText \nattribute DOMString outerHTML \nattribute DOMString outerText \nattribute DOMString contentEditable \nattribute boolean spellcheck \nElement insertAdjacentElement( DOMString where, Element element) \nvoid insertAdjacentHTML( DOMString where, DOMString html) \nvoid insertAdjacentText( DOMString where, DOMString text) \nWebSocket.idl \nattribute EventListener onopen \nattribute EventListener onmessage \nattribute EventListener onerror \nattribute EventListener onclose \nboolean send( DOMString data) \nvoid close() \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nSVGPoint.idl \nattribute float x \nattribute float y \nSVGPoint matrixTransform( SVGMatrix matrix) \nHTMLLabelElement.idl \nattribute DOMString accessKey \nattribute DOMString htmlFor \nSVGTransformList.idl \nvoid clear() \nSVGTransform initialize( SVGTransform item) \nSVGTransform getItem( unsignedlong index) \nSVGTransform insertItemBefore( SVGTransform item, unsignedlong index) \nSVGTransform replaceItem( SVGTransform item, unsignedlong index) \nSVGTransform removeItem( unsignedlong index) \nSVGTransform appendItem( SVGTransform item) \nSVGTransform createSVGTransformFromMatrix( SVGMatrix matrix) \nSVGTransform consolidate() \nSVGLength.idl \nattribute float value \nattribute float valueInSpecifiedUnits \nattribute DOMString valueAsString \nvoid newValueSpecifiedUnits( unsignedshort unitType, float valueInSpecifiedUnits) \nvoid convertToSpecifiedUnits( unsignedshort unitType) \nCSSCharsetRule.idl \nattribute DOMString encoding \nDOMFormData.idl \nvoid append( DOMString name, DOMString value) \nHTMLBRElement.idl \nattribute DOMString clear \nRange.idl \nvoid setStart( Node refNode, long offset) \nvoid setEnd( Node refNode, long offset) \nvoid setStartBefore( Node refNode) \nvoid setStartAfter( Node refNode) \nvoid setEndBefore( Node refNode) \nvoid setEndAfter( Node refNode) \nvoid collapse( boolean toStart) \nvoid selectNode( Node refNode) \nvoid selectNodeContents( Node refNode) \nshort compareBoundaryPoints( CompareHow how, Range sourceRange) \nvoid deleteContents() \nDocumentFragment extractContents() \nDocumentFragment cloneContents() \nvoid insertNode( Node newNode) \nvoid surroundContents( Node newParent) \nRange cloneRange() \nDOMString toString() \nvoid detach() \nClientRectList getClientRects() \nClientRect getBoundingClientRect() \nDocumentFragment createContextualFragment( DOMString html) \nboolean intersectsNode( Node refNode) \nshort compareNode( Node refNode) \nshort comparePoint( Node refNode, long offset) \nboolean isPointInRange( Node refNode, long offset) \nvoid expand( DOMString unit) \nXPathException.idl \nDOMString toString() \nMutationEvent.idl \nvoid initMutationEvent( DOMString type, boolean canBubble, boolean cancelable, Node relatedNode, DOMString prevValue, DOMString newValue, DOMString attrName, unsignedshort attrChange)  \nSQLTransactionCallback.idl \nboolean handleEvent( SQLTransaction transaction) \nSVGAnimatedBoolean.idl \nattribute boolean baseVal \nHTMLEmbedElement.idl \nattribute DOMString align \nattribute DOMString height \nattribute long height \nattribute DOMString name \nattribute DOMString src \nattribute DOMString type \nattribute DOMString width \nattribute long width \nSVGDocument getSVGDocument() \nSVGStylable.idl \nCSSValue getPresentationAttribute( DOMString name) \nIDBDatabaseException.idl \nDOMString toString() \nPopStateEvent.idl \nvoid initPopStateEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, SerializedScriptValue stateArg) \nHTMLFontElement.idl \nattribute DOMString color \nattribute DOMString face \nattribute DOMString size \nHTMLAllCollection.idl \nNode item( unsignedlong index) \nNode namedItem( DOMString name) \nNodeList tags( DOMString name) \nHTMLLinkElement.idl \nattribute boolean disabled \nattribute DOMString charset \nattribute DOMString href \nattribute DOMString hreflang \nattribute DOMString media \nattribute DOMString rel \nattribute DOMString rev \nattribute DOMString target \nattribute DOMString type \nHTMLObjectElement.idl \nattribute DOMString code \nattribute DOMString align \nattribute DOMString archive \nattribute DOMString border \nattribute DOMString codeBase \nattribute DOMString codeType \nattribute DOMString data \nattribute boolean declare \nattribute DOMString height \nattribute long hspace \nattribute DOMString name \nattribute DOMString standby \nattribute DOMString type \nattribute DOMString useMap \nattribute long vspace \nattribute DOMString width \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nSVGDocument getSVGDocument() \nHTMLTableElement.idl \nattribute HTMLTableCaptionElement caption \nattribute HTMLTableSectionElement tHead \nattribute HTMLTableSectionElement tFoot \nattribute DOMString align \nattribute DOMString bgColor \nattribute DOMString border \nattribute DOMString cellPadding \nattribute DOMString cellSpacing \nattribute DOMString frame \nattribute DOMString rules \nattribute DOMString summary \nattribute DOMString width \nHTMLElement createTHead() \nvoid deleteTHead() \nHTMLElement createTFoot() \nvoid deleteTFoot() \nHTMLElement createCaption() \nvoid deleteCaption() \nHTMLElement insertRow( long index) \nvoid deleteRow( long index) \nNavigator.idl \nboolean javaEnabled() \nvoid getStorageUpdates() \nvoid registerProtocolHandler( DOMString scheme, DOMString url, DOMString title) \nvoid webkitGetUserMedia( DOMString options, NavigatorUserMediaSuccessCallback successCallback, NavigatorUserMediaErrorCallback errorCallback) \nEventSource.idl \nattribute EventListener onopen \nattribute EventListener onmessage \nattribute EventListener onerror \nvoid close() \nvoid addEventListener( DOMString type,EventListener listener,boolean useCapture) \nvoid removeEventListener( DOMString type,EventListener listener,boolean useCapture) \nboolean dispatchEvent( Event evt) \nClipboard.idl \nattribute DOMString dropEffect \nattribute DOMString effectAllowed \nvoid clearData( DOMString type) \nvoid getData( DOMString type) \nboolean setData( DOMString type, DOMString data) \nvoid setDragImage( HTMLImageElement image, long x, long y) \nInjectedScriptHost.idl \nvoid clearConsoleMessages() \nvoid copyText( DOMString text) \nvoid inspect( DOMObject objectId, DOMObject hints) \nDOMObject inspectedNode( int num) \nDOMObject internalConstructorName( DOMObject object) \nDOMObject currentCallFrame() \nint databaseId( DOMObject database) \nint storageId( DOMObject storage) \nvoid didCreateWorker( long id, DOMString url, boolean isFakeWorker) \nvoid didDestroyWorker( long id) \nlong nextWorkerId() \nHTMLOptGroupElement.idl \nattribute boolean disabled \nattribute DOMString label \nSVGTests.idl \nboolean hasExtension( DOMString extension) \nHTMLMapElement.idl \nattribute DOMString name \nSVGPathSegLinetoHorizontalAbs.idl \nattribute float x \nHTMLBlockquoteElement.idl \nattribute DOMString cite \nSVGPathSegLinetoVerticalRel.idl \nattribute float y \nSVGPathSegCurvetoQuadraticAbs.idl \nattribute float x \nattribute float y \nattribute float x1 \nattribute float y1 \nDedicatedWorkerContext.idl \nattribute EventListener onmessage \nvoid postMessage( any message, Array messagePorts) \nvoid postMessage( DOMString message, MessagePort messagePort) \nXSLTProcessor.idl \nvoid importStylesheet( Node stylesheet) \nDocumentFragment transformToFragment( Node source, Document docVal) \nDocument transformToDocument( Node source) \nvoid setParameter( DOMString namespaceURI, DOMString localName, DOMString value) \nDOMString getParameter( DOMString namespaceURI, DOMString localName) \nvoid removeParameter( DOMString namespaceURI, DOMString localName) \nvoid clearParameters() \nvoid reset() \nSVGPathSegArcRel.idl \nattribute float x \nattribute float y \nattribute float r1 \nattribute float r2 \nattribute float angle \nattribute boolean largeArcFlag \nattribute boolean sweepFlag \nSVGSVGElement.idl \nattribute DOMString contentScriptType \nattribute DOMString contentStyleType \nattribute boolean useCurrentView \nattribute float currentScale \nunsignedlong suspendRedraw( unsignedlong maxWaitMilliseconds) \nvoid unsuspendRedraw( unsignedlong suspendHandleId) \nvoid unsuspendRedrawAll() \nvoid forceRedraw() \nvoid pauseAnimations() \nvoid unpauseAnimations() \nboolean animationsPaused() \nfloat getCurrentTime() \nvoid setCurrentTime( float seconds) \nNodeList getIntersectionList( SVGRect rect, SVGElement referenceElement) \nNodeList getEnclosureList( SVGRect rect, SVGElement referenceElement) \nboolean checkIntersection( SVGElement element, SVGRect rect) \nboolean checkEnclosure( SVGElement element, SVGRect rect) \nvoid deselectAll() \nSVGNumber createSVGNumber() \nSVGLength createSVGLength() \nSVGAngle createSVGAngle() \nSVGPoint createSVGPoint() \nSVGMatrix createSVGMatrix() \nSVGRect createSVGRect() \nSVGTransform createSVGTransform() \nSVGTransform createSVGTransformFromMatrix( SVGMatrix matrix) \nElement getElementById( DOMString elementId) \nNodeList.idl \nNode item( unsignedlong index) \nDocument.idl \nattribute EventListener onabort \nattribute EventListener onblur \nattribute EventListener onchange \nattribute EventListener onclick \nattribute EventListener oncontextmenu \nattribute EventListener ondblclick \nattribute EventListener ondrag \nattribute EventListener ondragend \nattribute EventListener ondragenter \nattribute EventListener ondragleave \nattribute EventListener ondragover \nattribute EventListener ondragstart \nattribute EventListener ondrop \nattribute EventListener onerror \nattribute EventListener onfocus \nattribute EventListener oninput \nattribute EventListener oninvalid \nattribute EventListener onkeydown \nattribute EventListener onkeypress \nattribute EventListener onkeyup \nattribute EventListener onload \nattribute EventListener onmousedown \nattribute EventListener onmousemove \nattribute EventListener onmouseout \nattribute EventListener onmouseover \nattribute EventListener onmouseup \nattribute EventListener onmousewheel \nattribute EventListener onreadystatechange \nattribute EventListener onscroll \nattribute EventListener onselect \nattribute EventListener onsubmit \nattribute EventListener onbeforecut \nattribute EventListener oncut \nattribute EventListener onbeforecopy \nattribute EventListener oncopy \nattribute EventListener onbeforepaste \nattribute EventListener onpaste \nattribute EventListener onreset \nattribute EventListener onsearch \nattribute EventListener onselectstart \nattribute EventListener onselectionchange \nattribute EventListener ontouchstart \nattribute EventListener ontouchmove \nattribute EventListener ontouchend \nattribute EventListener ontouchcancel \nattribute EventListener onwebkitfullscreenchange \nattribute DOMString title \nattribute DOMString domain \nattribute DOMString cookie \nattribute HTMLElement body \nattribute DOMString xmlVersion \nattribute boolean xmlStandalone \nattribute DOMString documentURI \nattribute Location location \nattribute DOMString charset \nattribute DOMString selectedStylesheetSet \nElement createElement( DOMString tagName) \nDocumentFragment createDocumentFragment() \nText createTextNode( DOMString data) \nComment createComment( DOMString data) \nCDATASection createCDATASection( DOMString data) \nProcessingInstruction createProcessingInstruction( DOMString target,DOMString data) \nAttr createAttribute( DOMString name) \nEntityReference createEntityReference( DOMString name) \nNodeList getElementsByTagName( DOMString tagname) \nNode importNode( Node importedNode, boolean deep) \nElement createElementNS( DOMString namespaceURI, DOMString qualifiedName) \nAttr createAttributeNS( DOMString namespaceURI, DOMString qualifiedName) \nNodeList getElementsByTagNameNS( DOMString namespaceURI, DOMString localName) \nElement getElementById( DOMString elementId) \nNode adoptNode( Node source) \nEvent createEvent( DOMString eventType) \nRange createRange() \nNodeIterator createNodeIterator( Node root, unsignedlong whatToShow, NodeFilter filter, boolean expandEntityReferences) \nTreeWalker createTreeWalker( Node root, unsignedlong whatToShow, NodeFilter filter, boolean expandEntityReferences) \nCSSStyleDeclaration getOverrideStyle( Element element, DOMString pseudoElement) \nXPathExpression createExpression( DOMString expression, XPathNSResolver resolver) \nXPathNSResolver createNSResolver( Node nodeResolver) \nXPathResult evaluate( DOMString expression, Node contextNode, XPathNSResolver resolver, unsignedshort type, XPathResult inResult) \nboolean execCommand( DOMString command, boolean userInterface, DOMString value) \nboolean execCommand( DOMString command, boolean userInterface) \nboolean execCommand( DOMString command) \nboolean queryCommandEnabled( DOMString command) \nboolean queryCommandIndeterm( DOMString command) \nboolean queryCommandState( DOMString command) \nboolean queryCommandSupported( DOMString command) \nDOMString queryCommandValue( DOMString command) \nNodeList getElementsByName( DOMString elementName) \nElement elementFromPoint( long x, long y) \nRange caretRangeFromPoint( long x, long y) \nDOMSelection getSelection() \nCSSStyleDeclaration createCSSStyleDeclaration() \nCSSStyleDeclaration getComputedStyle( Element element, DOMString pseudoElement) \nCSSRuleList getMatchedCSSRules( Element element, DOMString pseudoElement) \nCSSRuleList getMatchedCSSRules( Element element, DOMString pseudoElement, boolean authorOnly) \nDOMObject getCSSCanvasContext( DOMString contextId, DOMString name, long width, long height) \nNodeList getElementsByClassName( DOMString tagname) \nElement querySelector( DOMString selectors) \nNodeList querySelectorAll( DOMString selectors) \nvoid resetWMLPageState() \nvoid initializeWMLPageState() \nvoid webkitCancelFullScreen() \nTouch createTouch( DOMWindow window, EventTarget target, long identifier, long pageX, long pageY, long ScreenX, long screenY) \nEnabledAtRuntime, TouchList createTouchList() \nboolean isHTMLDocument() \nAttr.idl \nattribute DOMString value \nHTMLTableRowElement.idl \nattribute DOMString align \nattribute DOMString bgColor \nattribute DOMString ch \nattribute DOMString chOff \nattribute DOMString vAlign \nHTMLElement insertCell( long index) \nvoid deleteCell( long index) \nHTMLLegendElement.idl \nattribute DOMString accessKey \nattribute DOMString align \nHTMLOListElement.idl \nattribute boolean compact \nattribute long start \nattribute DOMString type \nHTMLTableCellElement.idl \nattribute DOMString abbr \nattribute DOMString align \nattribute DOMString axis \nattribute DOMString bgColor \nattribute DOMString ch \nattribute DOMString chOff \nattribute long colSpan \nattribute DOMString headers \nattribute DOMString height \nattribute boolean noWrap \nattribute long rowSpan \nattribute DOMString scope \nattribute DOMString vAlign \nattribute DOMString width \nKeyboardEvent.idl \nboolean getModifierState( DOMString keyIdentifierArg) \nvoid initKeyboardEvent( DOMString type, boolean canBubble, boolean cancelable, DOMWindow view, DOMString keyIdentifier, unsignedlong keyLocation, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey, boolean altGraphKey) \nvoid initKeyboardEvent( DOMString type, boolean canBubble, boolean cancelable, DOMWindow view, DOMString keyIdentifier, unsignedlong keyLocation, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey)  \nCSSRule.idl \nattribute DOMString cssText \nNodeFilter.idl \nshort acceptNode( Node n) \nWorkerLocation.idl \nDOMString toString() \nSVGFilterElement.idl \nvoid setFilterRes( unsignedlong filterResX, unsignedlong filterResY) \nCanvasGradient.idl \nvoid addColorStop( float offset, DOMString color) \nFileList.idl \nFile item( unsignedlong index) \nHTMLHtmlElement.idl \nattribute DOMString version \nattribute DOMString manifest \nHTMLAnchorElement.idl \nattribute DOMString accessKey \nattribute DOMString charset \nattribute DOMString coords \nattribute DOMString href \nattribute DOMString hreflang \nattribute DOMString name \nattribute DOMString ping \nattribute DOMString rel \nattribute DOMString rev \nattribute DOMString shape \nattribute DOMString target \nattribute DOMString type \nattribute DOMString hash \nattribute DOMString host \nattribute DOMString hostname \nattribute DOMString pathname \nattribute DOMString port \nattribute DOMString protocol \nattribute DOMString search \nDOMString getParameter( DOMString name) \nDOMString toString() \nDOMWindow.idl \nHRESULT document( IDOMDocument** result) \nHRESULT getComputedStyle( IDOMElement* element, BSTR pseudoElement) \nHRESULT getMatchedCSSRules( IDOMElement* element, BSTR pseudoElement, bool authorOnly, IDOMCSSRuleList** result) \nHRESULT devicePixelRatio( double result) \nLocation.idl \nattribute DOMString href \nattribute DOMString protocol \nattribute DOMString host \nattribute DOMString hostname \nattribute DOMString port \nattribute DOMString pathname \nattribute DOMString search \nattribute DOMString hash \nvoid assign( DOMString url) \nvoid replace( DOMString url) \nvoid reload() \nDOMString getParameter( DOMString name) \nDOMString toString() \nDOMObject valueOf() \nHTMLInputElement.idl \nattribute DOMString defaultValue \nattribute boolean defaultChecked \nattribute DOMString formAction \nattribute DOMString formEnctype \nattribute DOMString formMethod \nattribute boolean formNoValidate \nattribute DOMString formTarget \nattribute DOMString accept \nattribute DOMString accessKey \nattribute DOMString align \nattribute DOMString alt \nattribute boolean checked \nattribute boolean disabled \nattribute boolean autofocus \nattribute DOMString max \nattribute long maxLength \nattribute DOMString min \nattribute boolean multiple \nattribute boolean webkitdirectory \nattribute DOMString name \nattribute DOMString pattern \nattribute DOMString placeholder \nattribute boolean readOnly \nattribute boolean required \nattribute DOMString src \nattribute DOMString step \nattribute DOMString useMap \nattribute DOMString value \nattribute Date valueAsDate \nattribute double valueAsNumber \nattribute boolean incremental \nattribute boolean indeterminate \nattribute long selectionStart \nattribute long selectionEnd \nattribute boolean webkitSpeech \nattribute boolean webkitGrammar \nattribute EventListener onwebkitspeechchange \nvoid stepUp( long n) \nvoid stepDown( long n) \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nvoid select() \nvoid click() \nvoid setValueForUser( DOMString value) \nvoid setSelectionRange( long start, long end) \nHTMLButtonElement.idl \nattribute DOMString formAction \nattribute DOMString formEnctype \nattribute DOMString formMethod \nattribute boolean formNoValidate \nattribute DOMString formTarget \nattribute DOMString accessKey \nattribute boolean disabled \nattribute boolean autofocus \nattribute DOMString name \nattribute DOMString value \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nvoid click() \nXMLSerializer.idl \nDOMString serializeToString( Node node) \nCSSMediaRule.idl \nunsignedlong insertRule( DOMString rule, unsignedlong index) \nvoid deleteRule( unsignedlong index) \nSVGException.idl \nDOMString toString() \nHTMLSelectElement.idl \nattribute long selectedIndex \nattribute DOMString value \nattribute unsignedlong length \nattribute boolean disabled \nattribute boolean autofocus \nattribute boolean multiple \nattribute DOMString name \nattribute boolean required \nattribute long size \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nvoid add( HTMLElement element, HTMLElement before) \nvoid remove() \nvoid remove( long index) \nNode item( unsignedlong index) \nNode namedItem( DOMString name) \nSVGAltGlyphElement.idl \nattribute DOMString glyphRef \nattribute DOMString format \nSVGAnimatedEnumeration.idl \nattribute unsignedshort baseVal \nNamedNodeMap.idl \nNode getNamedItem( DOMString name) \nNode setNamedItem( Node node) \nNode removeNamedItem( DOMString name) \nNode item( unsignedlong index) \nNode getNamedItemNS( DOMString namespaceURI, DOMString localName) \nNode setNamedItemNS( Node node) \nNode removeNamedItemNS( DOMString namespaceURI, DOMString localName) \nHTMLFormElement.idl \nattribute DOMString name \nattribute boolean noValidate \nattribute DOMString acceptCharset \nattribute DOMString action \nattribute DOMString encoding \nattribute DOMString enctype \nattribute DOMString method \nattribute DOMString target \nvoid submit() \nvoid submit() \nvoid reset() \nboolean checkValidity() \nCSSValueList.idl \nCSSValue item( unsignedlong index) \nMessagePort.idl \nattribute EventListener onmessage \nvoid postMessage( DOMString message, Array messagePorts) \nvoid start() \nvoid close() \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nHTMLVideoElement.idl \nattribute unsignedlong width \nattribute unsignedlong height \nattribute DOMString poster \nvoid webkitEnterFullscreen() \nvoid webkitExitFullscreen() \nvoid webkitEnterFullScreen() \nvoid webkitExitFullScreen() \nXPathExpression.idl \nXPathResult evaluate( Node contextNode,unsignedshort type,XPathResult inResult) \nBeforeLoadEvent.idl \nvoid initBeforeLoadEvent( DOMString type,boolean canBubble,boolean cancelable,DOMString url) \nSVGZoomAndPan.idl \nattribute unsignedshort zoomAndPan \nHTMLFrameSetElement.idl \nattribute DOMString cols \nattribute DOMString rows \nattribute EventListener onbeforeunload \nattribute EventListener onhashchange \nattribute EventListener onmessage \nattribute EventListener onoffline \nattribute EventListener ononline \nattribute EventListener onpopstate \nattribute EventListener onresize \nattribute EventListener onstorage \nattribute EventListener onunload \nattribute EventListener onorientationchange \nattribute EventListener onblur \nattribute EventListener onerror \nattribute EventListener onfocus \nattribute EventListener onload \nHTMLPreElement.idl \nattribute long width \nattribute boolean wrap \nProgressEvent.idl \nvoid initProgressEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg,boolean lengthComputableArg, unsignedlonglong loadedArg, unsignedlonglong totalArg) \nHTMLParagraphElement.idl \nattribute DOMString align \nHTMLStyleElement.idl \nattribute boolean disabled \nattribute DOMString media \nattribute DOMString type \nSVGNumber.idl \nattribute float value \nSVGColor.idl \nvoid setRGBColor( DOMString rgbColor) \nvoid setRGBColorICCColor( DOMString rgbColor, DOMString iccColor) \nvoid setColor( unsignedshort colorType, DOMString rgbColor, DOMString iccColor) \nHTMLParamElement.idl \nattribute DOMString name \nattribute DOMString type \nattribute DOMString value \nattribute DOMString valueType \nHTMLBaseElement.idl \nattribute DOMString href \nattribute DOMString target \nSVGPathSegArcAbs.idl \nattribute float x \nattribute float y \nattribute float r1 \nattribute float r2 \nattribute float angle \nattribute boolean largeArcFlag \nattribute boolean sweepFlag \nSVGPaint.idl \nvoid setUri( DOMString uri) \nvoid setPaint( unsignedshort paintType, DOMString uri, DOMString rgbColor, DOMString iccColor) \nWorker.idl \nattribute EventListener onmessage \nvoid postMessage( SerialisedScriptValue message, Array messagePorts) \nvoid postMessage( SerializedScriptValue message, MessagePort messagePort) \nvoid terminate() \nSVGPathSegLinetoHorizontalRel.idl \nattribute float x \nMessageEvent.idl \nvoid initMessageEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, SerializedScriptValue dataArg, DOMString originArg, DOMString lastEventIdArg, DOMWindow sourceArg, Array messagePorts) \nvoid initMessageEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, SerializedScriptValue dataArg, DOMString originArg, DOMString lastEventIdArg, DOMWindow sourceArg, MessagePort messagePort) \nHTMLOptionsCollection.idl \nattribute long selectedIndex \nattribute unsignedlong length \nvoid add( HTMLOptionElement option, unsignedlong index) \nvoid remove( unsignedlong index) \nNode item( unsignedlong index) \nNode namedItem( DOMString name) \nTextEvent.idl \nvoid initTextEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMWindow viewArg, DOMString dataArg) \nHTMLTitleElement.idl \nattribute DOMString text \nHTMLProgressElement.idl \nattribute double value \nattribute double max \nNotification.idl \nattribute EventListener ondisplay \nattribute EventListener onerror \nattribute EventListener onclose \nattribute EventListener onclick \nattribute DOMString dir \nattribute DOMString replaceId \nvoid show() \nvoid cancel() \nvoid addEventListener( DOMString type, EventListener listener, boolean useCapture) \nvoid removeEventListener( DOMString type, EventListener listener, boolean useCapture) \nboolean dispatchEvent( Event evt) \nHTMLCollection.idl \nNode item( unsignedlong index) \nNode namedItem( DOMString name) \nNodeList tags( DOMString name) \nHTMLIsIndexElement.idl \nattribute DOMString prompt \nSQLTransaction.idl \nvoid executeSql( DOMString sqlStatement, ObjectArray arguments, SQLStatementCallback callback, SQLStatementErrorCallback errorCallback) \nHTMLFieldSetElement.idl \nboolean checkValidity() \nvoid setCustomValidity( DOMString error) \nDocumentFragment.idl \nElement querySelector( DOMString selectors) \nNodeList querySelectorAll( DOMString selectors) \nSVGScriptElement.idl \nattribute DOMString type \nHTMLTableColElement.idl \nattribute DOMString align \nattribute DOMString ch \nattribute DOMString chOff \nattribute long span \nattribute DOMString vAlign \nattribute DOMString width \nSVGElement.idl \nattribute DOMString id \nattribute DOMString xmlbase \nSVGPathSegLinetoRel.idl \nattribute float x \nattribute float y \nElement.idl \nattribute EventListener onabort \nattribute EventListener onblur \nattribute EventListener onchange \nattribute EventListener onclick \nattribute EventListener oncontextmenu \nattribute EventListener ondblclick \nattribute EventListener ondrag \nattribute EventListener ondragend \nattribute EventListener ondragenter \nattribute EventListener ondragleave \nattribute EventListener ondragover \nattribute EventListener ondragstart \nattribute EventListener ondrop \nattribute EventListener onerror \nattribute EventListener onfocus \nattribute EventListener oninput \nattribute EventListener oninvalid \nattribute EventListener onkeydown \nattribute EventListener onkeypress \nattribute EventListener onkeyup \nattribute EventListener onload \nattribute EventListener onmousedown \nattribute EventListener onmousemove \nattribute EventListener onmouseout \nattribute EventListener onmouseover \nattribute EventListener onmouseup \nattribute EventListener onmousewheel \nattribute EventListener onscroll \nattribute EventListener onselect \nattribute EventListener onsubmit \nattribute long scrollLeft \nattribute long scrollTop \nattribute EventListener onbeforecut \nattribute EventListener oncut \nattribute EventListener onbeforecopy \nattribute EventListener oncopy \nattribute EventListener onbeforepaste \nattribute EventListener onpaste \nattribute EventListener onreset \nattribute EventListener onsearch \nattribute EventListener onselectstart \nattribute EventListener ontouchstart \nattribute EventListener ontouchmove \nattribute EventListener ontouchend \nattribute EventListener ontouchcancel \nattribute EventListener onwebkitfullscreenchange \nDOMString getAttribute( DOMString name) \nvoid setAttribute( DOMString name, DOMString value) \nvoid removeAttribute( DOMString name) \nAttr getAttributeNode( DOMString name) \nAttr setAttributeNode( Attr newAttr) \nAttr removeAttributeNode( Attr oldAttr) \nNodeList getElementsByTagName( DOMString name) \nDOMString getAttributeNS( DOMString namespaceURI,DOMString localName) \nvoid setAttributeNS( DOMString namespaceURI, DOMString qualifiedName, DOMString value) \nvoid removeAttributeNS( DOMString namespaceURI, DOMString localName) \nNodeList getElementsByTagNameNS( DOMString namespaceURI, DOMString localName) \nAttr getAttributeNodeNS( DOMString namespaceURI, DOMString localName) \nAttr setAttributeNodeNS( Attr newAttr) \nboolean hasAttribute( DOMString name) \nboolean hasAttributeNS( DOMString namespaceURI, DOMString localName) \nvoid focus() \nvoid blur() \nvoid scrollIntoView( boolean alignWithTop) \nboolean contains( Element element) \nvoid scrollIntoViewIfNeeded( boolean centerIfNeeded) \nvoid scrollByLines( long lines) \nvoid scrollByPages( long pages) \nWebKitAnimationList webkitGetAnimations() \nNodeList getElementsByClassName( DOMString name) \nElement querySelector( DOMString selectors) \nNodeList querySelectorAll( DOMString selectors) \nboolean webkitMatchesSelector( DOMString selectors) \nClientRectList getClientRects() \nClientRect getBoundingClientRect() \nvoid webkitRequestFullScreen( unsignedshort flags) \nSVGLengthList.idl \nvoid clear() \nSVGLength initialize( SVGLength item) \nSVGLength getItem( unsignedlong index) \nSVGLength insertItemBefore( SVGLength item, unsignedlong index) \nSVGLength replaceItem( SVGLength item, unsignedlong index) \nSVGLength removeItem( unsignedlong index) \nSVGLength appendItem( SVGLength item) \nWebKitAnimationEvent.idl \nvoid initWebKitAnimationEvent( DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMString animationNameArg, double elapsedTimeArg) \nCSSStyleSheet.idl \nunsignedlong insertRule( DOMString rule, unsignedlong index) \nvoid deleteRule( unsignedlong index) \nlong addRule( DOMString selector, DOMString style, unsignedlong index) \nvoid removeRule( unsignedlong index) \nSVGPreserveAspectRatio.idl \nattribute unsignedshort align \nattribute unsignedshort meetOrSlice \nHTMLOptionElement.idl \nattribute boolean defaultSelected \nattribute DOMString text \nattribute boolean disabled \nattribute DOMString label \nattribute boolean selected \nattribute DOMString value \nXPathEvaluator.idl \nattribute DOMString type \nattribute long value \nXPathExpression createExpression( DOMString expression, XPathNSResolver resolver) \nXPathNSResolver createNSResolver( Node nodeResolver) \nXPathResult evaluate( DOMString expression, Node contextNode, XPathNSResolver resolver, unsignedshort type, XPathResult inResult) \nSVGPathSegLinetoVerticalAbs.idl \nattribute float y \nWebKitCSSMatrix.idl \nattribute double m11 \nattribute double m12 \nattribute double m13 \nattribute double m14 \nattribute double m21 \nattribute double m22 \nattribute double m23 \nattribute double m24 \nattribute double m31 \nattribute double m32 \nattribute double m33 \nattribute double m34 \nattribute double m41 \nattribute double m42 \nattribute double m43 \nattribute double m44 \nvoid setMatrixValue( DOMString string) \nWebKitCSSMatrix multiply( WebKitCSSMatrix secondMatrix) \nWebKitCSSMatrix inverse() \nWebKitCSSMatrix translate( double x, double y, double z) \nWebKitCSSMatrix scale( double scaleX, double scaleY, double scaleZ) \nWebKitCSSMatrix rotate( double rotX, double rotY, double rotZ) \nWebKitCSSMatrix rotateAxisAngle( double x, double y, double z, double angle) \nWebKitCSSMatrix skewX( double angle) \nWebKitCSSMatrix skewY( double angle) \nDOMString toString() \nVoidCallback.idl \nvoid handleEvent() \nXPathResult.idl \nNode iterateNext() \nNode snapshotItem( unsignedlong index) \nSVGPathSegMovetoAbs.idl \nattribute float x \nattribute float y \nSVGAnimatedInteger.idl \nattribute long baseVal \nHTMLDListElement.idl \nattribute boolean compact \nText.idl \nText splitText( unsignedlong offset) \nText replaceWholeText( DOMString content) \nSQLStatementCallback.idl \nboolean handleEvent( SQLTransaction transaction, SQLResultSet resultSet) \nWheelEvent.idl \nvoid initWheelEvent( long wheelDeltaX, long wheelDeltaY, DOMWindow view, long screenX, long screenY, long clientX, long clientY, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey) \nvoid initWebKitWheelEvent( long wheelDeltaX, long wheelDeltaY, DOMWindow view, long screenX, long screenY, long clientX, long clientY, boolean ctrlKey, boolean altKey, boolean shiftKey, boolean metaKey) ";